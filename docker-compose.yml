version: '3.8'

services:
    # Development environment
    dev:
        build:
            context: .
            dockerfile: Dockerfile
            target: dev
        ports:
            - '3000:3000' # Next.js web app
            - '3001:3001' # NestJS API
        volumes:
            - .:/app
            - /app/node_modules
            - /app/apps/web/node_modules
            - /app/apps/api/node_modules
        environment:
            - NODE_ENV=development
        command: pnpm dev
        stdin_open: true
        tty: true

    # Production API service
    api:
        build:
            context: .
            dockerfile: Dockerfile
            target: api
        ports:
            - '3001:3001'
        env_file:
            - .env.production
        environment:
            - NODE_ENV=production
            - PORT=3001
        restart: unless-stopped
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:3001/api/health']
            interval: 30s
            timeout: 10s
            retries: 3

    # Production Web service
    web:
        build:
            context: .
            dockerfile: Dockerfile
            target: web
        ports:
            - '3000:3000'
        env_file:
            - .env.production
        environment:
            - NODE_ENV=production
            - PORT=3000
            - NEXT_TELEMETRY_DISABLED=1
        restart: unless-stopped
        depends_on:
            - api
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:3000']
            interval: 30s
            timeout: 10s
            retries: 3

    # Optional: Add a database service (uncomment if needed)
    # postgres:
    #   image: postgres:15-alpine
    #   environment:
    #     POSTGRES_DB: mindnote
    #     POSTGRES_USER: postgres
    #     POSTGRES_PASSWORD: password
    #   ports:
    #     - "5432:5432"
    #   volumes:
    #     - postgres_data:/var/lib/postgresql/data

    # Optional: Add Redis for caching (uncomment if needed)
    # redis:
    #   image: redis:7-alpine
    #   ports:
    #     - "6379:6379"
    #   volumes:
    #     - redis_data:/data
# volumes:
#   postgres_data:
#   redis_data:
